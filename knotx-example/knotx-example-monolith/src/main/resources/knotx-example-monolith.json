{
  "verticles": {
    "com.cognifide.knotx.server.KnotxServerVerticle": {
      "config": {
        "http.port": 8092,
        "displayExceptionDetails": true,
        "allowed.response.headers": [
          "referer",
          "user-agent",
          "from",
          "content-type",
          "content-length",
          "accept-charset",
          "accept-encoding",
          "accept-language",
          "accept",
          "host",
          "if-match",
          "if-none-match",
          "if-range",
          "if-unmodified-since",
          "if-modified-since",
          "max-forwards",
          "proxy-authorization",
          "proxy-connection",
          "range",
          "cookie",
          "cq-action",
          "cq-handle",
          "handle",
          "action",
          "cqstats",
          "depth",
          "translate",
          "expires",
          "date",
          "dav",
          "ms-author-via",
          "if",
          "destination",
          "access-control-allow-origin",
          "x-original-requested-uri",
          "x-solr-core-key",
          "x-language-code",
          "x-requested-with"
        ],
        "repositories": [
          {
            "path": "/content/local/.*",
            "address": "knotx.core.repository.filesystem"
          },
          {
            "path": "/content/.*",
            "address": "knotx.core.repository.http"
          }
        ],
        "routing": {
          "GET": [
            {
              "path": "/content/.*",
              "address": "knotx.core.viewengine"
            }
          ]
        }
      }
    },
    "com.cognifide.knotx.repository.HttpRepositoryVerticle": {
      "config": {
        "address": "knotx.core.repository.http",
        "client.options": {
          "maxPoolSize": 1000,
          "keepAlive": false,
          "tryUseCompression": true
        },
        "client.destination": {
          "domain": "localhost",
          "port": 3001
        }
      }
    },
    "com.cognifide.knotx.repository.FilesystemRepositoryVerticle": {
      "config": {
        "address": "knotx.core.repository.filesystem",
        "catalogue": ""
      }
    },
    "com.cognifide.knotx.splitter.FragmentSplitterVerticle": {
      "config": {
        "address": "knotx.core.splitter"
      }
    },
    "com.cognifide.knotx.engine.view.ViewEngineVerticle": {
      "config": {
        "address": "knotx.core.viewengine",
        "template.debug": true,
        "client.options": {
          "maxPoolSize": 1000,
          "keepAlive": false
        },
        "services": [
          {
            "name" : "first-service",
            "address" : "knotx.core.http.service-adapter",
            "params": {
              "path": "/service/mock/first.json"
            },
            "cacheKey": "first"
          },
          {
            "name" : "second-service",
            "address" : "knotx.core.http.service-adapter",
            "params": {
              "path": "/service/mock/second.json"
            }
          },
          {
            "name" : "third-service",
            "address" : "knotx.core.http.service-adapter",
            "params": {
              "path": "/service/mock/third.json"
            }
          },
          {
            "name" : "labelsRepository",
            "address" : "knotx.core.http.service-adapter",
            "params": {}
          }
        ]
      }
    },
    "com.cognifide.knotx.knot.action.ActionKnotVerticle" : {
      "config" : {
        "addres": "knotx.knot.action"
      }
    },
    "com.cognifide.knotx.core.serviceadapter.http.HttpServiceAdapterVerticle" :{
      "config": {
        "address": "knotx.core.http.service-adapter",
        "client.options": {
          "maxPoolSize": 1000,
          "keepAlive": false
        },
        "services": [
          {
            "path": "/service/mock/.*",
            "domain": "localhost",
            "port": 3000,
            "allowed.request.headers": [
              "Content-Type",
              "X-*"
            ]
          },
          {
            "path": "/service/.*",
            "domain": "localhost",
            "port": 8080,
            "allowed.request.headers": [
              "Content-Type",
              "X-*"
            ]
          }
        ]
      }
    },
    "com.cognifide.knotx.mocks.MockRemoteRepositoryVerticle": {
      "config": {
        "mock.data.root": "mock/repository",
        "http.port": 3001
      }
    },
    "com.cognifide.knotx.mocks.MockServiceVerticle": {
      "config": {
        "mock.data.root": "mock/service",
        "bouncing" : true,
        "http.port": 3000
      }
    },
    "com.cognifide.knotx.mocks.MockServiceAdapterVerticle": {
      "config": {
        "address" : "mock-adapter-service",
        "mock.data.root": "mock/service"
      }
    }
  }
}
